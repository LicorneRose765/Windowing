1. Si on ne considère que les coordonnées en x, voyez-vous que celles-ci sont organisées selon une file à priorité ? Où est la coordonnée minimum (maximum) ? Cette file à priorité est-elle un tas ? Justifiez.




2. Si on ne considère que les coordonnées en y, voyez-vous que celles-ci sont organisées selon un arbre binaire de recherche ? Où est la coordonnée minimum (maximum) ? Justifiez.

Si on ne considère que la coordonnée y, on fait apparaître un ABR. La définition d'un ABR est :
Un arbre binaire de recherche (ABR) est un arbre binaire tel que pour tout noeud x, la donnée qui s'y trouve est
  > aux données du sous-arbre gauche de x
  < aux données du sous-arbre droit de x
Or, dans la définition de la structure de donnée employée, il est dit que l'on note ymid la médiane des coordonnées de tous les points sauf la racine. Aussi, on note Pbelow l'ensemble des points p appartenant à l'ensemble P (duquel on exclut la racine) qui ont une coordonnée y < ymid. Similairement, on note Pabove l'ensemble des points p appartenant à l'ensemble P (duquel on exclut de nouveau la racin) qui ont une coordonnée y > ymid. La structure de donnée est construire telle que la racine possède deux sous-arbres : Pbelow comme sous-arbre gauche et Pabove comme sous-arbre droit. Il est donc clair que nous avons affaire à un ABR, puisque pour toutes donnée d'un noeud x, cette donnée est > aux données contenues dans son sous-arbre gauche et < aux données contenues dans son sous-arbre droit.


3. De quelle façon est équilibré un arbre de recherche à priorité ?

Lorsqu'on insère une nouvelle donnée, il faut la placer correctement selon sa coordonnée x et y. Par simplicité, notons p le noeud portant la donnée que l'on traite. Pour la coordonnée x, il faut que tous les descendants p soient des noeuds dont la coordonnée x est supérieure à celle de p. Pour la coordonnée y, il faut que tous les noeuds appartenant au sous-arbre gauche (resp. droit) de p aient une coordonnée y inférieure (resp. supérieure) à celle de p. )On pourrait placer un nouveau noeud (que l'on note a) en parcourant tous les fils gauche jusqu'en bas de l'arbre. Arrivé en bas, on place a en tant que fils gauche. Ensuite, on le remonte en l'inversant avec son père tant que sa coordonnée x est inférieure à celle de son père. Chaque fois qu'on le remonte, on le considère comme père de son précédent père et fils gauche/droite selon la place de son ancien père. Une fois que l'on s'est arrêtés, on va vérifier la coordonnée y. Si le noeud est fils gauche de son père et que sa coordonnée y est inférieure à celle de son père, on s'arrête. Si elle est supérieure, le noeud devient fils droit. Inversément, si le noeud est fils droit de son père et que sa coordonnée y est supérieure à celle de son père, on s'arrête. Si elle est inférieure, le noeud devient fils gauche. Si l'on a déplacé le noeud (fils droit -> fils gauche ou fils gauche -> fils droit, on va le redescendre tant que sa coordonnée x est supérieure à celle d'un de ses fils. De nouveau, lorsqu'on s'arrête, on vérifie s'il ne faut pas le déplacer de fils droit -> fils gauche ou de fils gauche -> fils droit, et on répète la descente. Tout cela, jusqu'à ce qu'il ne faille ni le descendre, ni le changer de position (car c'est lorsqu'il ne faut pas le changer que l'on s'arrête, comme écrit plus haut).
Équilibré = équilibre entre les sous-arbres ? Parce que si oui alors mon raisonnement sert à rien lol


4. La construction d’un arbre de recherche à priorité peut se faire en O(n log2 n) si n est le nombre de points de R^2 contenus dans l’arbre. Expliquez comment on peut y parvenir et comment le prouver. Il faut sans doute utiliser une autre structure de données qui permet de calculer efficacement la médiane.




5. La structure d’arbre de recherche à priorité permet d’obtenir efficacement l’ensemble des points de T qui sont contenus dans une fenêtre donnée de la forme (−∞ : x'] × [y : y']. Expliquez comment adapter l’algorithme proposé pour traiter une fenêtre de la forme [x : +∞) × [y : y'], [x : x'] × (−∞ : y'] ou [x : x'] × [y : y'].

Pour une fenêtre de la forme (−∞ : x'] × [y : y'], on a
  - un minimum à la racine selon la coordonnée x
  - un parcours dit "vers le bas" qui incrémente la valeur des coordonnées x (c'est-à-dire tout descendant d'un noeud a une coordonnée x inférieure à celle de ce noeud)
  - les fils gauches/droits sont ordonnés selon leur coordonnée y par rapport à la valeur ymid
Pour une fenêtre de la forme [x : +∞) × [y : y'], il faudrait avoir un maximum à la racine selon la coordonnée x et un parcours "vers le bas" qui incrémente la coordonnée x.
Pour une fenêtre de la forme [x : x'] × (−∞ : y'], il faut inverser le rôle des coordonnées : on place le minimum à la racine selon la coordonnée y, et un parcours "vers le bas" incrémente la coordonnée y. Aussi, les fils gauches/droits sont ordonnés selon leur coordonnée x par rapport à la valeur xmid.
Pour une fenêtre de la forme [x : x'] × [y : y'], on peut choisir sur quelle composante jouera le parcours "vers le bas" (x ou y). La racine aura comme valeur de la composante (x ou y) choisie un minimum ou un maximum, pour lequel on imposera une borne (x si on y met le minimum en x, x' si on y met le maximum en x, y si on y met le minimum en y et y' si on y met le maximum en y'). On imposera que tout noeud (racine comprise) doit se trouver dans l'intervale désormais bornée à gauche et à droite, alors qu'avant, on pouvait avoir une absence de borne et donc pas de minimum/maximum à respecter dans certains cas. On imposera aussi que les fils gauches/droits seront ordonnés selon la composante qui n'a pas été choisie, et que celle-ci doit se trouver dans l'intervalle bornée à gauche et à droite.


6. Les auteurs du Chapitre 10 font l’hypothèse que tous les points ont des coordonnées bien distinctes en x et en y. Expliquez pourquoi.

On accepte les points ayant une composante identique en x ou en y (ou exclusif) puisqu'on peut les représenter différemment comme suit : (x, y) devient ((x|y), (y|x)). Il est trivial de voir que si deux points ont une composante identique, alors, sous cette nouvelle forme, ils ont deux composantes distinctes. On empêche cependant d'avoir des points avec deux composantes identiques (par exemple (2, 3) et (2, 3)) car alors, sous leur nouvelle forme, ils conserveraient leur identicité ((2, 3) devient ((2|3), (3|2)), et on ne peut plus différencier plusieurs instances de (2, 3), là où c'était le cas lorsqu'une composante variait)).


7. Une technique est présentée à la page 111. Celle-ci permet de simuler des coordonnées distinctes pour un ensemble de points quelconques et une requête. Expliquez comment.

La coordonnée simulée pour un point (px, py) est ((px|py), (py|px)). Cela permet de différencier des points ayant une composante identique grâce à leur nouvelle composantes, appelées nombres composites. La nouvelle range (R') définie est [(x|−∞) : (x'|+∞)] × [(y| −∞) : (y'|+∞)]. Chaque point original appartient à la range originale (R) si x <= px <= x' et y <= py <= y'. Pour R', la condition devient (x|−∞) <= (a|b) <= (x'|+∞) et (y|-∞) <= (py|px) <= (y'|+∞). Pour vérifier chacune des conditions, on doit vérifier l'ordre définit sur les nombres composites définit comme (a|b) < (a'|b') ⇔ a < a' or (a = a' and b < b'). Donc, pour la première condition, on a (x|-∞) <= (px|py) <= (x'|+∞) qui devient x <= px or (x = px and y <= py) and px <= x' or (px = x' and py <= y'), c'est-à-dire x <= px or (x = px and py >= -∞) and px <= x' or (px = x' and py <= +∞). On doit donc vérifier que (x <= px ou x = px) et (px <= x' ou px = x') car les conditions -∞ <= py et py <= +∞ seront toujours vraies par hypothèse.
On peut donc dire que si (px, py) appartient à R, alors x <= px <= x' et y <= py <= y'. Or, ((px|py), (py|px)) appartient à R' si (x <= px ou x = px) et (px <= x' ou px = x'), c'est-à-dire x <= px <= x'. Cela nous permet de conclure que si (px, py) appartient à R, alors ((px|py), (py|px)) appartient à la nouvelle range.


8. Dans le chapitre, la technique présentée est adaptée à des points. Quelles différences importantes aurait-on avec des segments de droite ? Comment peut-on adapter la technique ?


